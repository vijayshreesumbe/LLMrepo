"""
Create a simple final_report.docx summarizing key outputs.
Reads files from outputs/ generated by runner.py and writes a short Word report.
"""
from pathlib import Path
import pandas as pd
from docx import Document
from docx.shared import Pt

ROOT = Path(__file__).resolve().parent
OUT = ROOT / 'outputs'
DOC_PATH = ROOT / 'final_report.docx'

doc = Document()
doc.add_heading('Employee Sentiment & Engagement Analysis - Final Report', level=1)

# Add dataset summary
labeled = OUT / 'labeled_test.csv'
if labeled.exists():
    df = pd.read_csv(labeled)
    doc.add_heading('Dataset Summary', level=2)
    p = doc.add_paragraph()
    p.add_run(f"Rows: {len(df)}\n").bold = True
    p.add_run(f"Columns: {', '.join(df.columns.tolist())}\n")
else:
    doc.add_paragraph('Labeled dataset not found in outputs/.')

# Add sentiment distribution
try:
    monthly = OUT / 'monthly_scores.csv'
    if monthly.exists():
        mdf = pd.read_csv(monthly)
        doc.add_heading('Monthly Scores Overview', level=2)
        doc.add_paragraph(f"Monthly records: {len(mdf)}")
except Exception:
    pass

# Top 3 lists: pick the latest month files
import glob
pos_files = sorted(glob.glob(str(OUT / 'top3_positive_*.csv')))
neg_files = sorted(glob.glob(str(OUT / 'top3_negative_*.csv')))

if pos_files:
    latest_pos = pos_files[-1]
    posdf = pd.read_csv(latest_pos)
    doc.add_heading('Top 3 Positive Employees (latest month)', level=2)
    table = doc.add_table(rows=1, cols=len(posdf.columns))
    hdr_cells = table.rows[0].cells
    for i,c in enumerate(posdf.columns):
        hdr_cells[i].text = c
    for _,row in posdf.iterrows():
        cells = table.add_row().cells
        for i,c in enumerate(posdf.columns):
            cells[i].text = str(row[c])
else:
    doc.add_paragraph('No top3 positive files found.')

if neg_files:
    latest_neg = neg_files[-1]
    negdf = pd.read_csv(latest_neg)
    doc.add_heading('Top 3 Negative Employees (latest month)', level=2)
    table = doc.add_table(rows=1, cols=len(negdf.columns))
    hdr_cells = table.rows[0].cells
    for i,c in enumerate(negdf.columns):
        hdr_cells[i].text = c
    for _,row in negdf.iterrows():
        cells = table.add_row().cells
        for i,c in enumerate(negdf.columns):
            cells[i].text = str(row[c])
else:
    doc.add_paragraph('No top3 negative files found.')

# Flight risk list
fr = OUT / 'flight_risk_employees.csv'
if fr.exists():
    frdf = pd.read_csv(fr)
    doc.add_heading('Flight Risk Employees', level=2)
    if len(frdf)>0:
        for e in frdf.iloc[:,0].tolist():
            doc.add_paragraph(str(e), style='List Bullet')
    else:
        doc.add_paragraph('No employees flagged as flight risk.')
else:
    doc.add_paragraph('No flight_risk_employees.csv found in outputs/.')

# Model metrics
metrics = OUT / 'model_metrics.txt'
if metrics.exists():
    doc.add_heading('Predictive Model Metrics', level=2)
    with open(metrics,'r') as f:
        txt = f.read()
    doc.add_paragraph(txt)

# Save doc
doc.save(DOC_PATH)
print('Saved final report to', DOC_PATH)
